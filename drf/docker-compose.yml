version: '3.8'

services:
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    volumes:
      - minio:/data

  postgres_db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mynetwork
    environment:
      POSTGRES_USER: hello_django
      POSTGRES_PASSWORD: hello_django
      POSTGRES_DB: hello_django_dev
    ports:
      - "5432:5432"

  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    networks:
      - mynetwork
    ports:
      - "8000:8000"
    depends_on:
      - postgres_db
      - minio
      - redis
    environment:
      DB_NAME: hello_django_dev
      DB_USER: hello_django
      DB_PASSWORD: hello_django
      DB_HOST: postgres_db
      CELERY_BROKER_URL: "redis://redis:6379/0"

  # react-app:
  #   build:
  #     context: .../front_end/Dockerfile
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:80"
  #   volumes:
  #     - ./src:/app/src
  #     - /app/node_modules
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true

# Celery Service
  celery_worker:
      build: .
      command: celery -A drf.celery worker -l INFO
      volumes:
          - .:/usr/src/app
      networks:
      - mynetwork
      environment:
          - DEBUG=1
          - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
          - CELERY_BROKER=redis://redis:6379/0
          - CELERY_BACKEND=redis://redis:6379/0
          - CELERY_BROKER_URL=redis://redis:6379/0
      depends_on:
          - django
          - redis
          - postgres_db
          - celery_beat

  celery_beat:
      build: .
      command: celery -A drf beat --loglevel=info
      volumes:
        - .:/app
      networks:
      - mynetwork
      depends_on:
        - django
        - redis
        - postgres_db

# Redis Service
  redis:
      image: "redis:alpine"
      networks:
      - mynetwork
      ports:
      - "6379:6379"

volumes:
  minio:
  postgres_data:
networks:
  mynetwork:
    driver: bridge
